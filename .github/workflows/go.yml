name: Go

on:
  push:
    branches: ['*']
    tags: ['v*']
  pull_request:
    branches: ['*']

jobs:

  # build:
  #   name: Build
  #   timeout-minutes: 5
  #   strategy:
  #     matrix:
  #       go-version: [1.16.x, 1.17.x, 1.18.x]
  #       platform: [ubuntu-latest, macos-latest, windows-latest]
  #   runs-on: ${{ matrix.platform }}
    
  #   steps:
  #   - name: Install Go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: ${{ matrix.go-version }}

  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Load cached dependencies
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/go/pkg/mod
  #       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #       restore-keys: |
  #         ${{ runner.os }}-go-

  #   - name: Download dependencies
  #     run: make setup

  #   - name: Run linter
  #     run: make lint

  #   - name: Run unit tests
  #     run: make clean cover

  #   - name: Upload coverage to coveralls.io
  #     if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.18.x'
  #     uses: shogo82148/actions-goveralls@v1
  #     with:
  #       path-to-profile: cover.out
  #       flag-name: ${{ runner.os }}/Go-${{ matrix.go-version }}
  #       parallel: false

  customDocker:
    name: Run some docker images and logic inside alpine
    timeout-minutes: 5
    runs-on: ubuntu-latest

    container: golang:1.18.2-bullseye

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Load cached dependencies
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: List dir
      run: ls -la

    - name: SetUp dockers
      run: ${{ github.workspace }}/.github/workflows/setup_dockers_deb.sh

    - name: TearDown dockers
      run: ${{ github.workspace }}/.github/workflows/teardown_dockers.sh
